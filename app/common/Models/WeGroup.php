<?php

/**
 * WeGroup
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2017-06-21, 07:10:59
 */
class WeGroup extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    public $id;

    /**
     *
     * @var string
     * @Column(type="string", length=20, nullable=false)
     */
    public $ic;

    /**
     *
     * @var string
     * @Column(type="string", length=50, nullable=false)
     */
    public $title;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=false)
     */
    public $cls;

    /**
     *
     * @var integer
     * @Column(type="integer", length=3, nullable=false)
     */
    public $issys;

    /**
     *
     * @var string
     * @Column(type="string", length=500, nullable=false)
     */
    public $upset;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=false)
     */
    public $countuser;

    /**
     *
     * @var integer
     * @Column(type="integer", length=4, nullable=false)
     */
    public $isuse;

    /**
     *
     * @var integer
     * @Column(type="integer", length=4, nullable=false)
     */
    public $typeid;

    /**
     *
     * @var string
     * @Column(type="string", length=50, nullable=false)
     */
    public $typename;

    /**
     *
     * @var string
     * @Column(type="string", length=20, nullable=true)
     */
    public $mytype;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $countson;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $pid;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    public $access_id;

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("magiclamp");
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return WeGroup[]|WeGroup|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return WeGroup|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'ic' => 'ic',
            'title' => 'title',
            'cls' => 'cls',
            'issys' => 'issys',
            'upset' => 'upset',
            'countuser' => 'countuser',
            'isuse' => 'isuse',
            'typeid' => 'typeid',
            'typename' => 'typename',
            'mytype' => 'mytype',
            'countson' => 'countson',
            'pid' => 'pid',
            'access_id' => 'access_id'
        ];
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'we_group';
    }

}
