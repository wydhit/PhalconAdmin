<?php

use Phalcon\Validation\Validator\Email as EmailValidator;

/**
 * WeMessage
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2017-06-21, 07:11:03
 */
class WeMessage extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(type="integer", length=11, nullable=false)
     */
    public $id;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $mic;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $pid;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $pic;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $uid;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $unick;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $euid;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $eunick;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $stime;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $stimeint;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $etime;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $etimeint;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $isreview;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $isgood;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $isdel;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $ip;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $myname;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $mytel;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $recallperiod;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $email;

    /**
     *
     * @var string
     * @Column(type="string", length=255, nullable=true)
     */
    public $address;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    public $mycontent;

    /**
     * Validations and business logic
     *
     * @return boolean
     */
    public function validation()
    {
        $validator = new Validation();

        $validator->add(
            'email',
            new EmailValidator(
                [
                    'model'   => $this,
                    'message' => 'Please enter a correct email address',
                ]
            )
        );

        return $this->validate($validator);
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("magiclamp");
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return WeMessage[]|WeMessage|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return WeMessage|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'mic' => 'mic',
            'pid' => 'pid',
            'pic' => 'pic',
            'uid' => 'uid',
            'unick' => 'unick',
            'euid' => 'euid',
            'eunick' => 'eunick',
            'stime' => 'stime',
            'stimeint' => 'stimeint',
            'etime' => 'etime',
            'etimeint' => 'etimeint',
            'isreview' => 'isreview',
            'isgood' => 'isgood',
            'isdel' => 'isdel',
            'ip' => 'ip',
            'myname' => 'myname',
            'mytel' => 'mytel',
            'recallperiod' => 'recallperiod',
            'email' => 'email',
            'address' => 'address',
            'mycontent' => 'mycontent'
        ];
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'we_message';
    }

}
