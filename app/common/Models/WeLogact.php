<?php

/**
 * WeLogact
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2017-06-21, 07:11:01
 */
class WeLogact extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Column(type="integer", length=20, nullable=false)
     */
    public $id;

    /**
     *
     * @var string
     * @Column(type="string", nullable=true)
     */
    public $acttime;

    /**
     *
     * @var integer
     * @Column(type="integer", length=11, nullable=true)
     */
    public $actuid;

    /**
     *
     * @var string
     * @Column(type="string", length=50, nullable=true)
     */
    public $actnick;

    /**
     *
     * @var string
     * @Column(type="string", length=50, nullable=true)
     */
    public $actgname;

    /**
     *
     * @var string
     * @Column(type="string", length=20, nullable=true)
     */
    public $actip;

    /**
     *
     * @var string
     * @Column(type="string", length=128, nullable=true)
     */
    public $actname;

    /**
     *
     * @var string
     * @Column(type="string", length=128, nullable=true)
     */
    public $acturl;

    /**
     *
     * @var string
     * @Column(type="string", length=512, nullable=true)
     */
    public $actcontent;

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("magiclamp");
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return WeLogact[]|WeLogact|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return WeLogact|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'acttime' => 'acttime',
            'actuid' => 'actuid',
            'actnick' => 'actnick',
            'actgname' => 'actgname',
            'actip' => 'actip',
            'actname' => 'actname',
            'acturl' => 'acturl',
            'actcontent' => 'actcontent'
        ];
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'we_logact';
    }

}
